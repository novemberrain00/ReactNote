{"version":3,"sources":["components/button/index.js","components/button/button.js","components/header/index.js","components/header/header.js","components/note/index.js","components/note/note.js","components/notes-block/index.js","components/notes-block/notes-block.js","components/warning-window/index.js","components/warning-window/warning-window.js","components/note-editor/index.js","components/note-editor/note-editor.js","components/app/index.js","components/app/app.js","index.js"],"names":["Button","props","this","text","calb","onClick","className","Component","Header","showEditor","Note","title","date","time","id","editNote","removeNote","data-id","NotesBlock","notes","posts","map","item","length","WarningWindow","showWarningWindow","NoteEditor","editorTitle","show","action","setText","setTitle","editableText","editableTitle","value","onInput","placeholder","type","App","state","data","editorShowed","lastTitle","lastText","editable","bind","closeEditor","addNote","setNewTitle","setNewText","setState","e","target","elem","hours","Date","getHours","minutes","getMinutes","days","getDate","months","getMonth","push","index","findIndex","slice","parentNode","getAttribute","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4af43240.chunk.js","sourcesContent":["import Button from './button';\r\nexport default Button;","import React, {Component} from 'react';\r\n\r\nimport './button.css';\r\n\r\nexport default class Button extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { text, calb } = this.props;\r\n\r\n        return(\r\n            <button onClick={calb} className=\"btn\">{text}</button>\r\n        )\r\n    }\r\n}","import Header from './header';\r\nexport default Header;","import React, {Component} from 'react';\r\n\r\nimport Button from '../button'\r\n\r\nimport './header.css'\r\n\r\nexport default class Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n    }\r\n\r\n    render() {\r\n\r\n        const { showEditor } = this.props;\r\n\r\n        return(\r\n            <div className=\"header\">\r\n                <h1 className=\"title\">ReactNote</h1>\r\n                <div className=\"toolbar\">\r\n                   <Button text=\"+\" calb={showEditor}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import Note from './note';\r\nexport default Note;","import React, {Component} from 'react';\r\n\r\nimport './note.css';\r\n\r\nexport default class Note extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n    }\r\n\r\n    render() {\r\n        const { title, text, date, time, id, editNote, removeNote } = this.props;\r\n\r\n        return (\r\n            <div className=\"note\" data-id={id}> \r\n                <div className=\"note-header\">\r\n                    <span className=\"date\">{date} | {time}</span>\r\n                    <span onClick={editNote} className=\"note-edit\">Редактировать |</span>  \r\n                    <span onClick={()=>{removeNote(id)}} className=\"note-delete\">Удалить</span>   \r\n                </div>\r\n                <h2 className=\"note-title\">{title}</h2>\r\n                <p className=\"note-descr\">\r\n                    {text}\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}","import NotesBlock from './notes-block';\r\nexport default NotesBlock;","import React, {Component} from 'react';\r\n\r\nimport './notes-block.css';\r\n\r\nimport Note from '../note'\r\n\r\nexport default class NotesBlock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n    }\r\n\r\n    render(){\r\n\r\n        const { editNote, removeNote, notes } = this.props;\r\n\r\n        const posts = notes.map(item => {\r\n            return(\r\n                <Note \r\n                    title={item.title}\r\n                    text={item.text}\r\n                    date={item.date}\r\n                    time={item.time}\r\n                    id={item.id}\r\n                    editNote={editNote}\r\n                    removeNote={removeNote}\r\n                />\r\n                \r\n            )\r\n        });\r\n\r\n        if(notes.length === 0) {\r\n            return (\r\n                <div>\r\n                    <h2 className=\"empty\">Давайте создадим вашу первую заметку!</h2>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {posts}\r\n            </div>\r\n        )\r\n\r\n        \r\n\r\n    };\r\n} ","import WarningWindow from './warning-window.js'\r\nexport default WarningWindow;","import React, {Component} from 'react';\r\n\r\nimport './warning-window.css'\r\n\r\nexport default class WarningWindow extends Component {\r\n    render() {\r\n\r\n        const{ showWarningWindow } = this.props;\r\n        \r\n        if(showWarningWindow) {\r\n            return(\r\n                <div className=\"warning-window\">\r\n                    Все поля должны быть заполнены\r\n                </div>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}","import NoteEditor from './note-editor';\r\nexport default NoteEditor;","import React, { Component } from 'react';\r\n\r\nimport Button from '../button';\r\nimport WarningWindow from '../warning-window';\r\n\r\nimport './note-editor.css'\r\n\r\nexport default class NoteEditor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n    }\r\n\r\n    render() {\r\n\r\n        const { \r\n            editorTitle, \r\n            show, \r\n            action, \r\n            setText, \r\n            setTitle, \r\n            editableText, \r\n            editableTitle, \r\n            showWarningWindow,\r\n        } = this.props;\r\n\r\n        if(show) {\r\n            return(\r\n                <div className=\"note-editor-wrapper\">\r\n                    <div className=\"note-editor\">\r\n                        <h3 className=\"editor-title\">{editorTitle}</h3> \r\n                        <Button calb={action} text=\"Сохранить\"/>\r\n                        <div className=\"editor-content\">\r\n                            <div className=\"editor-toolbar\"></div>\r\n                            <input value={editableTitle} onInput={setTitle} placeholder=\"Название\" type=\"text\" className=\"editor-input\"/>\r\n                            <textarea value={editableText} onInput={setText} placeholder=\"Что бы вы хотели запомнить...\" className=\"editor-text\"></textarea>\r\n                        </div>\r\n                        <WarningWindow \r\n                            showWarningWindow={showWarningWindow}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}","import App from './app';\r\nexport default App;","import React, {Component} from 'react';\r\n\r\nimport Header from '../header';\r\nimport NotesBlock from '../notes-block';\r\nimport NoteEditor from '../note-editor';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.props = props;\r\n\r\n        this.id = 0;        \r\n\r\n        this.state = {\r\n            data: [],\r\n            editorShowed: false,\r\n            editorTitle: \"Добавить заметку\",\r\n            lastTitle: \"\",\r\n            lastText: \"\",\r\n            editableTitle: \"\",\r\n            editableText: \"\",\r\n            editable: 0,\r\n            showWarningWindow: false\r\n        }\r\n\r\n        this.showEditor = this.showEditor.bind(this);\r\n        this.closeEditor = this.closeEditor.bind(this);\r\n        this.setTitle = this.setTitle.bind(this);\r\n        this.setText = this.setText.bind(this);\r\n        this.addNote = this.addNote.bind(this);\r\n        this.removeNote = this.removeNote.bind(this);\r\n        this.editNote = this.editNote.bind(this);\r\n        this.setNewTitle = this.setNewTitle.bind(this);\r\n        this.setNewText = this.setNewText.bind(this);\r\n    }\r\n\r\n    showEditor() {\r\n        this.setState({editorShowed: true})\r\n        this.setState({editorTitle: \"Добавить заметку\"})\r\n        this.setState(\r\n            {\r\n                editableTitle: \"\",\r\n                editableText: \"\",\r\n                title: \"\",\r\n                text: \"\"\r\n            }\r\n        )\r\n    }\r\n\r\n    closeEditor(title, text) {\r\n        if(!title || !text) {\r\n            this.setState(\r\n                {\r\n                    showWarningWindow: true\r\n                }\r\n            )\r\n        } else {\r\n            this.setState(\r\n                {\r\n                    editorShowed: false,\r\n                    showWarningWindow: false,\r\n                    lastText: \"\",\r\n                    lastTitle: \"\"\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    setTitle(e) {\r\n        this.setState({lastTitle: e.target.value, editableTitle: e.target.value});\r\n    }\r\n\r\n    setText(e) {\r\n        this.setState({lastText: e.target.value,  editableText: e.target.value});\r\n    }\r\n\r\n    setNewTitle(e) {\r\n        const { data, editable } = this.state;\r\n        const elem = data[editable];\r\n        this.setState({editableTitle: e.target.value});\r\n        elem.title = e.target.value;\r\n    }\r\n\r\n    setNewText(e) {\r\n        const { data, editable } = this.state;\r\n        const elem = data[editable];\r\n        this.setState({editableText: e.target.value});\r\n        elem.text = e.target.value;\r\n    }\r\n\r\n    addNote() {\r\n        let { data, lastTitle, lastText } = this.state;\r\n\r\n        const hours = `${new Date().getHours()}`.length > 1 ? new Date().getHours() : \"0\" + new Date().getHours();\r\n        const minutes = `${new Date().getMinutes()}`.length > 1 ? new Date().getMinutes() : \"0\" + new Date().getMinutes();\r\n\r\n        const days = `${new Date().getDate()}`.length > 1 ? new Date().getDate() : \"0\" + new Date().getDate();\r\n        const months = `${new Date().getMonth()}`.length > 1 ? new Date().getMonth() : `0${new Date().getMonth()+1}`;\r\n\r\n        const time = `${hours}:${minutes}`;\r\n        const date = `${days}.${months}`;\r\n\r\n        if(lastTitle && lastText) {\r\n            data.push({title: lastTitle, text: lastText, date, time, id: this.id});\r\n            this.setState(data);\r\n            this.setState({editorTitle: 'Добавить заметку'});\r\n        }\r\n\r\n        this.id++;\r\n\r\n        this.closeEditor(lastTitle, lastText);\r\n    }\r\n\r\n    removeNote(id) {\r\n        this.id--;\r\n        this.setState(({data})=>{\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }\r\n\r\n    editNote(e) {\r\n        this.setState({editorShowed: true});\r\n        this.setState({editorTitle: 'Редактировать заметку'});\r\n        this.setState({editable: e.target.parentNode.parentNode.getAttribute('data-id')});\r\n    }\r\n\r\n    render() {\r\n        const { \r\n            data, \r\n            editorTitle, \r\n            editorShowed, \r\n            editableText, \r\n            editableTitle, \r\n            showWarningWindow\r\n        } = this.state;\r\n\r\n        let action,\r\n            setText,\r\n            setTitle;\r\n        if(editorTitle === \"Редактировать заметку\") {\r\n            action = this.closeEditor;\r\n            setTitle = this.setNewTitle;\r\n            setText = this.setNewText;\r\n        } else {\r\n            action = this.addNote;\r\n            setTitle = this.setTitle;\r\n            setText = this.setText;\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Header showEditor={this.showEditor}/>\r\n                <NotesBlock \r\n                    editNote={this.editNote}\r\n                    removeNote={this.removeNote}\r\n                    notes={data}\r\n                />\r\n                <NoteEditor \r\n                    editorTitle={editorTitle}\r\n                    show={editorShowed}\r\n                    action={action}\r\n                    setText={setText}\r\n                    setTitle={setTitle}\r\n                    editableTitle={editableTitle}\r\n                    editableText={editableText}\r\n                    showWarningWindow={showWarningWindow}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}